<controls:MetroWindow x:Class="GodHand.Client.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:client="clr-namespace:GodHand.Client"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:viewModel="clr-namespace:GodHand.Client.ViewModels"
        xmlns:views="clr-namespace:GodHand.Client.Views"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
                      cal:Message.Attach="[Event Loaded]=[Action View_Loaded()]">
    
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Name="BtnShowSettings" cal:Message.Attach="[Event Click] = [Action BtnShowSettings()]">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="15"
                               Height="15"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4 0 0 0"
                               VerticalAlignment="Center"                               
                               Text="Settings" />
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    
    <Grid>
      <controls:MetroAnimatedTabControl ItemsSource="{Binding TabItems}">
            <controls:MetroAnimatedTabControl.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type controls:MetroTabItem}}" TargetType="{x:Type controls:MetroTabItem}">
                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                </Style>
          </controls:MetroAnimatedTabControl.ItemContainerStyle>
            <controls:MetroAnimatedTabControl.ContentTemplate>
                <DataTemplate>
                    <controls:MetroContentControl cal:View.Model="{Binding Content}"/>
                </DataTemplate>

            </controls:MetroAnimatedTabControl.ContentTemplate>
          </controls:MetroAnimatedTabControl>
    </Grid>

    <!--<controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl ItemsSource="{Binding Flyouts}">
            <controls:FlyoutsControl.ItemContainerStyle>
                <Style BasedOn="{StaticResource {x:Type controls:Flyout}}" TargetType="{x:Type controls:Flyout}">
                    --><!--<Setter Property="Header" Value="{Binding Header}" />--><!--
                    <Setter Property="IsOpen" Value="{Binding IsOpen}" />
                    <Setter Property="Position" Value="{Binding Position}" />
                    <Setter Property="Theme" Value="Adapt" />
                </Style>
            </controls:FlyoutsControl.ItemContainerStyle>
            <controls:FlyoutsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type viewModel:SettingsViewModel}">
                    <views:SettingsView/>
                </DataTemplate>
            </controls:FlyoutsControl.ItemTemplate>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>-->
</controls:MetroWindow>

